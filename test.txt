new file

git add .

git add test.txt

git commit -m "edit"

git remote -v

delete branch:
git branch -d bugfix14

git merge bugfix15

git branch -a
git branch -r
git branch -v

git push origin --delete bugfix14

edit feb 3 from HP

edit feb 4 from lenovo


----------

 $ git branch <new-branch-name> 2b504bee


 git switch <other-branch
 
 
 rename
  git branch -m <new-name>

git branch -m <current-name> <new-name


 git push -u origin <local-branch
 
 
 delete remote branch
 git push origin --delete <old-name
 
  git push -u origin <new-name>
  
  Tracking Branches
This is an important command to create relationships between 
local and remote branches - since initially, they don’t have any! 
The most common example is having a local branch track a 
remote one, so that you can simply type “git push” or “git pull” 
without additional parameters to keep everything in sync. This 
can be quickly achieved by typing the command below:

   git branch --track <new-branch> origin/<base-branch
   
   git checkout --track origin/<base-branch
   
   compare branches
   
   git log <main>..<feature-branch
   
   git log <origin/main>..<main
   
   
   merge
   git switch <main> 
$ git switch <feature-branch>
$ git merge <feature-branch>

Rebasing Branches
Rebasing is an alternative to merging - both achieve the 
same goal, but the Rebase option re-writes the project history, 
creating a straight line. As a result, you get a linear history, 
which may be preferred by some teams.
Rebasing consists of two steps: you will need to switch to the 
feature branch first, and then type the “git rebase” command:


 git switch <feature-branch
 $ git rebase <main>
 
 
 delete local branch
 $ git branch -d <branch-name>
 
 To delete a remote branch, keep in mind that the command 
is totally different
 $ git push origin --delete <branch-name>

 
 
   
--------------------------------------

>>> name = "Pythonista"
>>> moment = "morning"

>>> f"Hello, {name}! Good {moment}!"
'Hello, Pythonista! Good morning!'


ello, {0}! Good {1}!".format("Pythonista", "morning")
'Hello, Pythonista! Good morning!'































